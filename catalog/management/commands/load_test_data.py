from django.core.management.base import BaseCommand
from catalog.models import Category, Product


class Command(BaseCommand):
    help = '–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π'

    def handle(self, *args, **options):
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        Product.objects.all().delete()
        Category.objects.all().delete()

        self.stdout.write('–£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ...')

        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories_data = [
            {"name": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "description": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –≥–∞–¥–∂–µ—Ç—ã"},
            {"name": "–û–¥–µ–∂–¥–∞", "description": "–û–¥–µ–∂–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã"},
            {"name": "–ö–Ω–∏–≥–∏", "description": "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∏ —É—á–µ–±–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞"},
            {"name": "–°–ø–æ—Ä—Ç", "description": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"},
            {"name": "–ú–µ–±–µ–ª—å", "description": "–ú–µ–±–µ–ª—å –¥–ª—è –¥–æ–º–∞ –∏ –æ—Ñ–∏—Å–∞"},
        ]

        for cat_data in categories_data:
            Category.objects.create(**cat_data)

        self.stdout.write('–°–æ–∑–¥–∞–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        electronics = Category.objects.get(name="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞")
        clothing = Category.objects.get(name="–û–¥–µ–∂–¥–∞")
        books = Category.objects.get(name="–ö–Ω–∏–≥–∏")
        sports = Category.objects.get(name="–°–ø–æ—Ä—Ç")
        furniture = Category.objects.get(name="–ú–µ–±–µ–ª—å")

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
        products_data = [
            # –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞
            {"name": "–°–º–∞—Ä—Ç—Ñ–æ–Ω iPhone 15", "price": 89999.99, "category": electronics,
             "description": "–ü–æ—Å–ª–µ–¥–Ω—è—è –º–æ–¥–µ–ª—å iPhone —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–∞–º–µ—Ä–æ–π"},
            {"name": "–ù–æ—É—Ç–±—É–∫ Dell XPS", "price": 129999.99, "category": electronics,
             "description": "–ú–æ—â–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –Ω–æ—É—Ç–±—É–∫ —Å SSD –¥–∏—Å–∫–æ–º"},
            {"name": "–ù–∞—É—à–Ω–∏–∫–∏ Sony", "price": 15999.99, "category": electronics,
             "description": "–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ —Å —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º"},

            # –û–¥–µ–∂–¥–∞
            {"name": "–§—É—Ç–±–æ–ª–∫–∞ —Ö–ª–æ–ø–∫–æ–≤–∞—è", "price": 1999.99, "category": clothing,
             "description": "–ú—É–∂—Å–∫–∞—è —Ö–ª–æ–ø–∫–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ —á–µ—Ä–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞"},
            {"name": "–î–∂–∏–Ω—Å—ã –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ", "price": 4999.99, "category": clothing,
             "description": "–°–∏–Ω–∏–µ –¥–∂–∏–Ω—Å—ã –ø—Ä—è–º–æ–≥–æ –∫—Ä–æ—è"},
            {"name": "–ö—É—Ä—Ç–∫–∞ –∑–∏–º–Ω—è—è", "price": 8999.99, "category": clothing,
             "description": "–¢–µ–ø–ª–∞—è –∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞ —Å –º–µ—Ö–æ–º"},

            # –ö–Ω–∏–≥–∏
            {"name": "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python", "price": 1499.99, "category": books,
             "description": "–£—á–µ–±–Ω–∏–∫ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö"},
            {"name": "–ò–≥—Ä–∞ –ø—Ä–µ—Å—Ç–æ–ª–æ–≤", "price": 999.99, "category": books,
             "description": "–§—ç–Ω—Ç–µ–∑–∏ —Ä–æ–º–∞–Ω –î–∂–æ—Ä–¥–∂–∞ –ú–∞—Ä—Ç–∏–Ω–∞"},

            # –°–ø–æ—Ä—Ç
            {"name": "–§—É—Ç–±–æ–ª—å–Ω—ã–π –º—è—á", "price": 2999.99, "category": sports,
             "description": "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ—É—Ç–±–æ–ª—å–Ω—ã–π –º—è—á"},
            {"name": "–ì–∞–Ω—Ç–µ–ª–∏ 5–∫–≥", "price": 1999.99, "category": sports,
             "description": "–ù–∞–±–æ—Ä –≥–∞–Ω—Ç–µ–ª–µ–π –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"},

            # –ú–µ–±–µ–ª—å
            {"name": "–û—Ñ–∏—Å–Ω–æ–µ –∫—Ä–µ—Å–ª–æ", "price": 8999.99, "category": furniture,
             "description": "–≠—Ä–≥–æ–Ω–æ–º–∏—á–Ω–æ–µ –æ—Ñ–∏—Å–Ω–æ–µ –∫—Ä–µ—Å–ª–æ"},
        ]

        for product_data in products_data:
            Product.objects.create(**product_data)

        self.stdout.write(
            self.style.SUCCESS('‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!')
        )
        self.stdout.write(
            self.style.SUCCESS(f'üì¶ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {Category.objects.count()} —à—Ç.')
        )
        self.stdout.write(
            self.style.SUCCESS(f'üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã: {Product.objects.count()} —à—Ç.')
        )