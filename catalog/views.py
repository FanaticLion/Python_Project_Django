from django.shortcuts import render, get_object_or_404
from django.http import HttpResponseRedirect
from django.contrib import messages
from .forms import ContactForm , ProductForm
from .models import Product, Contact  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
from django.shortcuts import redirect
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger


def home(request):
    # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –ø—Ä–æ–¥—É–∫—Ç—ã –≤–º–µ—Å—Ç–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5
    all_products = Product.objects.order_by('-created_at')

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é - 6 —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    paginator = Paginator(all_products, 6)
    page = request.GET.get('page')

    try:
        products = paginator.page(page)
    except PageNotAnInteger:
        # –ï—Å–ª–∏ page –Ω–µ —á–∏—Å–ª–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        products = paginator.page(1)
    except EmptyPage:
        # –ï—Å–ª–∏ page –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        products = paginator.page(paginator.num_pages)

    # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print("=" * 50)
    print(f"–°–¢–†–ê–ù–ò–¶–ê: {products.number} –∏–∑ {paginator.num_pages}")
    print("=" * 50)
    for product in products:
        print(f"üè∑Ô∏è  {product.name} - {product.price} —Ä—É–±.")

    context = {
        'products': products,  # –ü–µ—Ä–µ–¥–∞–µ–º page object –≤–º–µ—Å—Ç–æ queryset
        'title': '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ú–∞–≥–∞–∑–∏–Ω'
    }
    return render(request, 'catalog/home.html', context)


def contacts(request):
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–∑ –±–∞–∑—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    contacts_list = Contact.objects.all().order_by('-created_at')

    if request.method == 'POST':
        form = ContactForm(request.POST)
        if form.is_valid():
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
            contact = form.save()
            messages.success(
                request,
                f'‚úÖ –°–ø–∞—Å–∏–±–æ, {contact.name}! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ {contact.email}'
            )
            return HttpResponseRedirect('/contacts/')
    else:
        form = ContactForm()

    context = {
        'form': form,
        'contacts': contacts_list,  # –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤ —à–∞–±–ª–æ–Ω
        'title': '–ö–æ–Ω—Ç–∞–∫—Ç—ã - –ú–∞–≥–∞–∑–∏–Ω'
    }
    return render(request, 'catalog/contacts.html', context)


# catalog/views.py
def product_detail(request, pk):
    product = get_object_or_404(Product, id=pk)
    return render(request, 'catalog/product_detail.html', {'product': product})


def add_product(request):
    if request.method == 'POST':
        form = ProductForm(request.POST, request.FILES)
        if form.is_valid():
            product = form.save()
            messages.success(request, f'–¢–æ–≤–∞—Ä "{product.name}" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')
            return redirect('catalog:product_detail', pk=product.id)
    else:
        form = ProductForm()

    context = {
        'form': form,
        'title': '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä - –ú–∞–≥–∞–∑–∏–Ω'
    }
    return render(request, 'catalog/add_product.html', context)